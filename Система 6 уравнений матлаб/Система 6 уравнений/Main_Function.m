%Основной файл программы. Задача о нагружении части кольцевой рамы.

function [] = Main_Function()

close all; clear all; clc;


global EJ_dif;
global EA_dif;

global F_nagruzka;

%параметры стержня
B=6;
H=1;
E=2e5;

L1=20;
L2=40; 
L3 = 60;
R1=20;
R2=R1;
H1=30;
% B=6;
% H2=1;
% E=2*e5;

s1 = L1 - R1*tan(1/2*atan(H1/L2));
s2 = s1 + R1*atan(H1/L2);
s3 = s2 + sqrt((L2).^2+(H1).^2) - (R1+R2)*tan(1/2*atan(H1/L2));
s4 = s3 + R2*atan(H1/L2);
s5 = s4 + L3 - R2*tan(1/2*atan(H1/L2));

L=s5;

%Вычисление жесткостей стержня
EJ_dif=B*H*H*H*E/12;
EA_dif=B*H*E;

%---------------------------------
%Создание набора точек в которых обязательно проводится численной
%интегрировние (используется для "сгущения" сетки в местах изменения
%геометрии (кривизны) или в областях вроде "заделок")
% s_1 =  0:0.2*L/30:0.2*L;
% s_1 =  0:L1/30:1.1*L1;
% s_2 = L1+L2:(L1+L2)/50:L1+1.1*L2;
s_1 =  0:0.2*L/30:0.15*L;
s_2 = 0.45*L:0.1*L/50:L;
 
%------------------------------
%Построение недеформированного состояния стержня
%------------------------------

%Вектор состояния в начале координат
Xv = [0,0,0,0,0,0];  

[s,result_int]=ode23s(@F_6,[s_1 s_2],Xv);

X_coord_nondif = result_int (:,1);
Y_coord_nondif  = result_int (:,2);


figure 
plot(X_coord_nondif,Y_coord_nondif, 'r'); 
grid on 
title('Изогнутая ось стержня (Недеформированное состояние)','FontName','Arial Cyr') 
xlabel('Координата Х, мм','FontName','Arial Cyr') 
ylabel('Координата Y, мм','FontName','Arial Cyr') 

%--------------------------------------------
%нагружение
%--------------------------------------

F_nagruzka = 5;
  
%Задаем предположительный вектор начальных условий, который функция bvp4c 
%будет уточнять
%Также задаем интервал интегрирования (в том числе точки в которых
%обязательно вычислять значения)

Xv = [0,0,0,0,0,0];  
%Можно в кач. начального приближения - линейное решение Xv = [0,0,0,0,0,-F_nagruzka*L]; 
smax=L; 
Xv_start_S_interval = bvpinit([s_1 s_2],Xv);

%Определяем вектор начальных условий и значения вектора состояния в разных
%точках стержня
result_sol = bvp4c(@F_6, @GU, Xv_start_S_interval);
 
x = linspace(0,smax);
y = deval(result_sol,x);


%Задаем вектор состояния в начале (уже найденный)
Xv = [y(1,1),y(2,1),y(3,1),y(4,1),y(5,1),y(6,1)];

%Интегрируем на чисто.

[s,result_int]=ode23s(@F_6,[s_1 s_2],Xv);


X_coord = result_int (:,1);
Y_coord  = result_int (:,2);
M_izgib = result_int (:,6);


figure 
plot(X_coord_nondif,Y_coord_nondif, 'r',X_coord,Y_coord, 'b'); 
grid on 
title('Изогнутая ось стержня','FontName','Arial Cyr') 
xlabel('Координата Х, мм','FontName','Arial Cyr') 
ylabel('Координата Y, мм','FontName','Arial Cyr') 


figure 
plot(s,M_izgib, 'r'); 
grid on 
title('Эпюры изгибающих моментов','FontName','Arial Cyr') 
xlabel('Дуговая координата S, мм','FontName','Arial Cyr') 
ylabel('Изгибающий момент, Н*мм','FontName','Arial Cyr') 


%Сравнение результатов для линейной и нелинейной задачи

M_izgib(1)  %Момент в заделке (нелинейное решение)
-F_nagruzka*L %Момент в заделке (линейное решение)




end